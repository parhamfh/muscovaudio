#N canvas 323 28 1022 699 10;
#X declare -lib mrpeach;
#X obj -165 -83 import mrpeach;
#X obj 104 4 unpackOSC;
#X obj -44 46 print from-osc;
#X obj 103 29 routeOSC /muscovaudio;
#X obj 103 111 routeOSC /x /y /leftbutton /rightbutton;
#X msg 425 157 \; pd dsp 0;
#X msg 349 157 \; pd dsp 1;
#X obj 160 186 s y_coordinate;
#X obj 104 -21 udpreceive 9001;
#N canvas 0 22 624 312 structure 0;
#X text 29 97 1 Sound on or off;
#X text 30 11 MAXIMUM NUMBER OF LINES = 10;
#X text 29 124 2 Specify values of MIDI-notes from every drawn line
;
#X text 29 154 3 Send bang to MIDI-note generator if line is struck
by ball;
#X text 29 192 4 Send bang to chord MIDI-note generator if walls are
struck by balls;
#X text 25 34 comment;
#X text 26 31 INPUTS: x \, y \, length;
#X text 73 50 bangs for every ball collision;
#X restore -166 -60 pd structure;
#X obj 102 163 s x_coordinate;
#X obj 71 500 s line_length;
#X text -85 126 SENT TO MIDI NOTE GENERATOR;
#N canvas 527 58 730 379 drawing_feedback 1;
#X obj -195 151 noteout 1;
#X obj -112 69 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom -194 87 5 0 0 0 - - -;
#X floatatom 157 -8 5 0 0 0 - - -;
#X msg 219 49 33;
#X obj -195 16 r y_coordinate;
#X text -210 -75 MIDI NOTE PITCH;
#X text 154 -76 MIDI NOTE LENGTH;
#X text 309 -77 MIDI NOTE INSTRUMENT;
#X obj 158 -35 r line_length;
#X obj 315 -56 r x_coordinate;
#X floatatom 314 35 5 0 0 0 - - -;
#X obj -194 111 makenote 100 1000;
#X msg -208 -22 possible values 62 64 67 69 71 74 76 79 81 83;
#X obj 315 -29 maxlib/scale 0 470 0 90;
#X text -210 -42 HANDLING IN PYTHON SO THAT INPUT VALUES IS RESTRICTED
TO:;
#X obj -195 46 maxlib/scale 0 630 10 127;
#X floatatom 343 192 5 0 0 0 - - -;
#X obj 343 146 bng 15 250 50 0 empty ball_collision empty 17 7 0 10
-4034 -1 -1;
#X obj 343 169 r note_collision;
#X obj -163 210 count;
#X text -123 211 COUNT BETWEEN DIFFERENT MIDI CHANNELS;
#X obj 243 171 bng 15 250 50 0 empty ball_collision empty 17 7 0 10
-4034 -1 -1;
#X floatatom 172 187 5 0 0 0 - - -;
#X obj 171 116 r y_coordinate;
#X obj 172 211 makenote 100 1000;
#X obj 171 146 maxlib/scale 0 630 10 127;
#X obj 171 251 noteout 2;
#X obj 314 61 pgmout 2;
#X obj 273 251 cup;
#X connect 1 0 2 0;
#X connect 2 0 12 0;
#X connect 3 0 12 2;
#X connect 4 0 28 0;
#X connect 5 0 16 0;
#X connect 9 0 3 0;
#X connect 10 0 14 0;
#X connect 11 0 28 0;
#X connect 12 0 0 0;
#X connect 12 1 0 1;
#X connect 14 0 11 0;
#X connect 16 0 2 0;
#X connect 17 0 25 0;
#X connect 18 0 17 0;
#X connect 19 0 17 0;
#X connect 22 0 23 0;
#X connect 22 0 29 0;
#X connect 23 0 25 0;
#X connect 24 0 26 0;
#X connect 25 0 27 0;
#X connect 25 1 27 1;
#X connect 26 0 23 0;
#X connect 29 0 27 2;
#X restore -166 -35 pd drawing_feedback;
#X text 99 -63 GENERATE MIDI NOTES FROM DRAWN LINES;
#X text 99 -76 RECEIVE MESSAGE FROM PYTHON FOR LIVE FEEDBACK;
#X obj 6 85 print info;
#X text 494 82 BALL COLLISION = BANG MIDI NOTE;
#X obj 103 78 routeOSC /mouse /start /stop /soundhandler;
#X obj 505 128 print collision;
#X obj 495 105 route /collision;
#X text 612 105 ROUTE line_collision;
#X text 613 124 ROUTE ball_collision;
#X obj 496 152 s ball_collision;
#X obj 391 121 bng 15 250 50 0 ball_collision empty ball_collision
17 7 0 10 -4034 -1 -1;
#X text 68 471 LEFTMOST CHANGES SOUND;
#X obj 176 499 expr;
#X connect 1 0 3 0;
#X connect 3 0 2 0;
#X connect 3 0 18 0;
#X connect 4 0 10 0;
#X connect 4 1 7 0;
#X connect 4 2 11 0;
#X connect 8 0 1 0;
#X connect 18 0 4 0;
#X connect 18 1 6 0;
#X connect 18 2 5 0;
#X connect 18 3 20 0;
#X connect 20 0 19 0;
#X connect 20 0 23 0;
#X connect 20 0 24 0;
